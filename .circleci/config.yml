version: 2.1
orbs:
  ruby: circleci/ruby@1.8.0
  aws-cli: circleci/aws-cli@3.1.1
  aws-ecr: circleci/aws-ecr@8.1.2
  aws-ecs: circleci/aws-ecs@2.3.0

defaults: &defaults
  working_directory: ~/scbreakpoints

executors:
  docker_machine:
    <<: *defaults
    machine:
      enabled: true
      docker_layer_caching: true
  ruby_machine:
    <<: *defaults
    docker:
      - image: cimg/ruby:2.6.6-node
        environment:
          RAILS_ENV: test
          BUNDLE_PATH: vendor/bundle
          BUNDLER_VERSION: 2.1.4

jobs:
  build:
    executor: ruby_machine
    steps:
      - checkout
      - attach_workspace:
          at: ~/scbreakpoints
      - run:
          name: SQLite install
          command: sudo apt-get update && sudo apt-get install sqlite3 libsqlite3-dev
      - run:
          name: Bundle install
          command: |
            gem install bundler -v=${BUNDLER_VERSION}
            bundle install --path=vendor/bundle
      - persist_to_workspace:
          root: ~/scbreakpoints
          paths:
            - vendor/bundle
  test:
    executor: ruby_machine
    steps:
      - checkout
      - attach_workspace:
          at: ~/scbreakpoints
      - run:
          name: RSpec
          command: |
            gem install bundler -v=${BUNDLER_VERSION}
            bundle exec rake db:test:prepare
            bundle exec rspec

  rubocop:
    executor: ruby_machine
    steps:
      - checkout
      - attach_workspace:
          at: ~/scbreakpoints
      - run:
          name: RuboCop
          command: |
            gem install bundler -v=${BUNDLER_VERSION}
            bundle exec rubocop

  build_image:
    executor: docker_machine
    steps:
      - aws-ecr/build-and-push-image:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: eu-central-1
          registry-id: AWS_ECR_REGISTRY_ID
          repo: scbreakpoints
          tag: "${CIRCLE_BUILD_NUM},latest"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_image
      - build
      - test:
          requires:
            - build
      - rubocop:
          requires:
            - build
      - aws-ecs/deploy-service-update: # ABOSLUTELY NEEDS AWS_REGION set up in CircleCi
          family: "scbreakpoints-task"
          cluster-name: "scbreakpoints-cluster"
          container-image-name-updates: "container=scbreakpoints-service,tag=latest"
          requires:
            - build_image
            - test
